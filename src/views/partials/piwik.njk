<script src="{{ cdnHost }}/javascripts/vendor/jquery-3.3.1.min.js"></script>
<script src="{{ cdnHost }}/javascripts/app/piwik-enable.js"></script>


<!-- Matomo -->
<script nonce={{ nonce | dump | safe }}>
    var _paq = window._paq = window._paq || [];
    /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
    
    _paq.push(['enableLinkTracking']);
    (function () {
      var u = "//matomo.identity.aws.chdev.org/";
      _paq.push(['setTrackerUrl', u + 'matomo.php']);
      _paq.push(['setSiteId', '1']);
      var d = document,
        g = d.createElement('script'),
        s = d.getElementsByTagName('script')[0];
      g.async = true;
      g.src = u + 'matomo.js';
      s.parentNode.insertBefore(g, s);
    })();

//  Matomo automation -- this is to remove all the Matomo calls with the hardcoded analytics texts from the njk pages.
//  In a situation where Matomo analytics needs a non generic customization, the existing hardcoded Matomo calls are still possible.

//  Dynamic text to be obtained from the label of a radio button.
    var textOnRadioSelection = "";

//  Generic replacement text for personal identifiable data.
    var genericEradicationReplacementText = "<obliterated>";

//  Title of the page for the analytics.
    var eventCategory = $(document).find("title").text().split(' -')[0];

//  Additional text for the submit button for the the action delineation.
    var buttonSuffix = "";

//  Add the id of a specific element needs Obliteration.
    var hardObliterationForASpecificVariable = ["whatsTheBusinessNameRadio"];

    $(function() {
      //  The condition below checks and prioritizes the customized Matomo analytics calls.
      //  It has to be defined under "analyticsWithCustomisedMatomoText()" function in the page where the customization is needed.
      if (!$.isFunction(window.analyticsWithCustomisedMatomoText)){

          //  On the button click the button details are recorded.
          $("button").click(function() {
            eventNameBtn = $(this).text().toUpperCase();
          });

        $("form").on("submit",function() {
          
          //  The block below covers the Matomo analysis for the readio element.
          if ($("input[type='radio']:checked").length > 0) {

              buttonSuffix = "-"+$(this).find("input[type='radio']:checked").attr('value');

              // Initial check for the restricted variables
              if(hardObliterationForASpecificVariable.indexOf(
                $(this).find("input[type='radio']:checked").siblings("label").attr('for')
                ) > -1){
                  textOnRadioSelection = genericEradicationReplacementText;
              }else{
                  textOnRadioSelection = 
                          matomoObliteration(
                            $(this).find("input[type='radio']:checked").siblings("label").text().trim()
                );}
          }
          //  For other elements like check box and/or hrefs can be added further below like above.



          //  Finally Matomo analytics are recorded on page submission.
          if(textOnRadioSelection){
            alert(eventCategory +" : "+ textOnRadioSelection);
            // _paq.push(["trackEvent", eventCategory, textOnRadioSelection]);
          }

          eventNameBtn = eventNameBtn+buttonSuffix;
          if(eventNameBtn){
            alert(eventCategory +" : "+ eventNameBtn);
            // _paq.push(["trackEvent", eventCategory, eventNameBtn]);
          }
        });
      }
    });

    function matomoObliteration(textToBeChecked){
        var eradicationReplacementText = "<obliterated>";
        
        //  Complete obliteration for personal identifiable data 
        //  email and address for now, 
        //  new blocks can be added further below, e.g. phone number
        
        //  for Email
        if(/^\S+@\S+\.\S+$/.test(textToBeChecked)){
          buttonSuffix = "";
          return eradicationReplacementText;
        }
        
        //  for address
        if(/,\s[A-Z0-9]+[A-Z0-9]+/.test(textToBeChecked)){
          return eradicationReplacementText;
        }

        //  Patterns for some existing customised obliterations, 
        //  new patterns can be added in this array when needed.
        var restrictedTextPatternsForPartialObliteration = [/(( [A-Z0-9']+)+)\s\(([A-Z0-9]{8,})+\)/,
                                                            /([A-Z0-9']+( [A-Z0-9']+)+)/,
                                                            /(( [A-Z0-9']{3,})\S+)/];

        restrictedTextPatternsForPartialObliteration.some(rx => {if(rx.test(textToBeChecked)){
                                            textToBeChecked = textToBeChecked.replace(rx, " " +eradicationReplacementText);
                                          }
                                        }
                                      );
        return textToBeChecked;
    }
//  End of Matomo automation snippet

  </script>
  <noscript>
    <p>
        <img src="{{PIWIK_URL}}/piwik.php?idsite={{PIWIK_SITE_ID}}" class="piwik-img" alt="" />
    </p>
</noscript>
<script nonce={{ nonce | dump | safe }}>
// Function to add event categories base on page title
function trackEventBasedOnPageTitle(elementId, eventCategory, eventAction, eventName) {
    document.getElementById(elementId)
    .addEventListener("click", () => {
        _paq.push(["trackEvent", eventCategory, eventAction, eventName]);
    });
}

// Matomo function for use on Work Sector page as it is now optional
function trackEventWorkSector(elementId, eventCategory, eventAction, eventName) {
  document.getElementById(elementId);
        _paq.push(["trackEvent", eventCategory, eventAction, eventName]);
}

// Matomo function to capture radio button selection
function trackEventBasedOnRadioId(elementId, eventCategory, eventAction) {
    const radioButton = document.getElementById(elementId);
    if (radioButton) {
      const labelText = document.querySelector(`label[for="${radioButton.id}"]`).textContent.trim();
      _paq.push(["trackEvent", eventCategory, eventAction, labelText]);
    }
}
</script>
<!-- Matomo Ends -->