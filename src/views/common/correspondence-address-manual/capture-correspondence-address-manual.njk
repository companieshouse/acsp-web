{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% extends "layouts/default.njk" %}
{% set errors = pageProperties.errors %}
{% set title = i18n.correspondenceAddressManualTitle %}
{% block main_content %}
<form action="{{ currentUrl }}?lang={{ lang }}" method="POST">
    {% include "partials/csrf_token.njk" %}
    {% if businessName %}
        {% include "partials/business_name.njk" %}
    {% endif %}
    {% if firstName %}
        {% include "partials/user_name.njk" %}
    {% endif %}
    <div class="govuk-form-group">
    {{ govukFieldset({
        legend: {
            text: i18n.correspondenceAddressManualTitle,
            classes: "govuk-fieldset__legend--l",
            isPageHeading: true
        }  
    }) }}
    {{ govukInput({
        label: {
            text: i18n.addressPropertyDetails
        },
        hint: {
            text: i18n.addressPropertyDetailsHint
        },
        id: "addressPropertyDetails",
        name: "addressPropertyDetails",
        value: payload["addressPropertyDetails"],
        errorMessage: {
            text: errors["addressPropertyDetails"].text
        } if errors.addressPropertyDetails
    }) }}
    {{ govukInput({
        label: {
            text: i18n.addressLine1
        },
        id: "addressLine1",
        name: "addressLine1",
        value: payload["addressLine1"],
        errorMessage: {
            text: errors["addressLine1"].text
        } if errors.addressLine1
    }) }}
    {{ govukInput({
        label: {
            text: i18n.addressLine2
        },
        id: "addressLine2",
        name: "addressLine2",
        value: payload["addressLine2"],
        errorMessage: {
            text: errors["addressLine2"].text
        } if errors.addressLine2
    }) }}
    {{ govukInput({
        label: {
            text: i18n.addressTown
        },
        classes: "govuk-!-width-two-thirds",
        id: "addressTown",
        name: "addressTown",
        value: payload["addressTown"],
        errorMessage: {
            text: errors["addressTown"].text
        } if errors.addressTown
    }) }}
    {{ govukInput({
        label: {
            text: i18n.addressCounty
        },
        classes: "govuk-!-width-two-thirds",
        id: "addressCounty",
        name: "addressCounty",
        value: payload["addressCounty"],
        errorMessage: {
            text: errors["addressCounty"].text
        } if errors.addressCounty
    }) }}
    <div id="typeahead-form-group" class="govuk-form-group">
        <label for="countryInput" class="govuk-label">{{ i18n.addressCountry }}</label>
        {% set dropdownDefaultText = i18n.whereDoYouLiveDefaultDropdownText %}
        {% if payload.countryInput | length %}
            {% set dropdownValue = payload.countryInput %}
        {% endif %}
        <p class="govuk-hint" id="typeahead-hint">{{ i18n.whereDoYouLiveHint }}</p>
        <div id="my-autocomplete-container" class="autocomplete-wrapper govuk-!-width-two-thirds"></div>
        {% set errorMessage = errors %}
        {% include "../../partials/country-typeahead-input.njk" %}
      </div>
    {{ govukInput({
        label: {
            text: i18n.correspondenceAddressPostcode
        },
        classes: "govuk-input--width-10",
        id: "addressPostcode",
        name: "addressPostcode",
        value: payload["addressPostcode"],
        errorMessage: {
            text: errors["addressPostcode"].text
        } if errors.addressPostcode
    }) }}
    </div>

    <button class="govuk-button" id="save-continue-button">{{ i18n.SaveAndContinue }}</button>
</form>
{% endblock main_content %}