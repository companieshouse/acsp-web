{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}

{% extends "layouts/default.njk" %}
{% set title = i18n.sectorYouWorkInTitle %}
{% block main_content %}
  <form action="" method="POST">
    {% if acspType == "SOLE_TRADER" %}
      {% include "partials/user_name.njk" %}
    {% endif %}
    {{ govukRadios({
      classes: "govuk-radios",
      id: "sector-you-work-in-radios",
      name: "sectorYouWorkIn",
      fieldset: {
        legend: {
          text: i18n.sectorYouWorkInTitle,
          isPageHeading: true,
          classes: "govuk-fieldset__legend--l"
        }
      },
      hint: {
        text: i18n.sectorYouWorkInHintText,
        id: "what-sector-hint",
        classes: "govuk-hint govuk-!-padding-bottom-2"
      },
      value: workSector,
      items: [
        {
          value: "AIA",
          text: i18n.sectorYouWorkInAuditorsInsolvencyPractitionersOption,
          id:"AIA-id"
        },
        {
          value: "ILP",
          text: i18n.sectorYouWorkInIndependentLegalProfessionalsOption,
          id:"ILP-id"
        },
        {
          value: "TCSP",
          text: i18n.sectorYouWorkInTrustOrCompanyServiceProvidersOption,
          id:"TCSP-id"
        },
        {
          value: "CI",
          text: i18n.sectorYouWorkInCreditInstitutionsOption,
          id:"CI-id"
        },
        {
          value: "FI",
          text: i18n.sectorYouWorkInFinancialInstitutionsOption,
          id:"FI-id"
        },
        {
          value: "OTHER",
          text: i18n.sectorYouWorkInOtherOption,
          id:"OTHER-id"
        }
      ]
    }) }}
    {{ govukButton({
        text: i18n.SaveAndContinue,
        id:"save-continue-button"
    }) }}
  </form>

<script>
let selectedRadio = null;

// Function to track Matomo analytics based on the selected radio button
function trackRadioSelection() {
  const radioButtons = document.querySelectorAll('input[name="sectorYouWorkIn"]'); 
  radioButtons.forEach((radio) => {
    radio.addEventListener("click", (event) => {
      // Set selectedRadio to the capture the properties of the selected radio button 
      selectedRadio = event.target;
      // Capture the text content of the selected radio button
      const labelText = document.querySelector(`label[for="${selectedRadio.id}"]`).textContent.trim();     
      // Track event based on the selected radio button id and text content
      trackEventBasedOnRadioId(selectedRadio.id, "{{title}}", "select-option", labelText);
      trackEventBasedOnPageTitle("save-continue-button", "click-button", "SAVE AND CONTINUE - Sector you work in");
    });
  });
}

// Run trackRadioSelection function
trackRadioSelection();

// EventListener to track the value of selectedRadio when save and continue button is clicked
document.getElementById("save-continue-button").addEventListener("click", () => {
  // If no radio button has been selected then work sector has not been provided
  if (!selectedRadio) {
    trackEventWorkSectorNotProvided("save-continue-button", "click-button", "SAVE AND CONTINUE - Sector you work in - Not provided");
  }
});
</script>

{% endblock main_content %}